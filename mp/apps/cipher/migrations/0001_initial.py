# Generated by Django 4.2.25 on 2025-10-15 18:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mp.core.model.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="CipherCardData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("name", mp.core.model.fields.EncryptedTextField()),
                (
                    "notes",
                    mp.core.model.fields.EncryptedTextField(blank=True, null=True),
                ),
                ("cardholder_name", mp.core.model.fields.EncryptedTextField()),
                ("number", mp.core.model.fields.EncryptedTextField()),
                ("brand", mp.core.model.fields.EncryptedTextField()),
                ("exp_month", mp.core.model.fields.EncryptedTextField()),
                ("exp_year", mp.core.model.fields.EncryptedTextField()),
                ("security_code", mp.core.model.fields.EncryptedTextField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CipherLoginData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("name", mp.core.model.fields.EncryptedTextField()),
                (
                    "notes",
                    mp.core.model.fields.EncryptedTextField(blank=True, null=True),
                ),
                ("username", mp.core.model.fields.EncryptedTextField()),
                ("password", mp.core.model.fields.EncryptedTextField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CipherSecureNoteData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("name", mp.core.model.fields.EncryptedTextField()),
                (
                    "notes",
                    mp.core.model.fields.EncryptedTextField(blank=True, null=True),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("GENERIC", "Generic")],
                        default="GENERIC",
                        max_length=25,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Cipher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uuid", models.UUIDField(default=uuid.uuid4, unique=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("CARD", "Card"),
                            ("LOGIN", "Login"),
                            ("SECURE_NOTE", "Secure note"),
                        ],
                        max_length=25,
                    ),
                ),
                ("key", mp.core.model.fields.EncryptedTextField()),
                ("is_favorite", mp.core.model.fields.EncryptedTextField()),
                ("status", mp.core.model.fields.EncryptedTextField()),
                ("object_id", models.PositiveIntegerField()),
                (
                    "delete_on",
                    models.DateTimeField(
                        blank=True,
                        help_text="Schedule timestamp to be deleted. If cipher status is DELETED.",
                        null=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="cipher_ciph_content_751058_idx",
                    )
                ],
                "unique_together": {("content_type", "object_id")},
            },
        ),
    ]
