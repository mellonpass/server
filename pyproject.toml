[tool.poetry]
name = "mellonpass"
version = "0.2.0"
description = "API For MellonPass UI."
authors = ["Roel Delos Reyes <badcoder28@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
django = "4.2"
strawberry-graphql = "^0.258.0"
django-environ = "^0.11.2"
django-extensions = "^3.2.3"
dj-database-url = "^2.2.0"
psycopg2 = "^2.9.9"
cryptography = "^44.0.1"
pyjwt = "^2.9.0"
pyyaml = "^6.0.2"
ua-parser = "^0.18.0"
user-agents = "^2.2.0"
django-debug = "^0.1.1"
celery = "^5.4.0"
django-celery-results = "^2.5.1"
django-celery-beat = "^2.7.0"
django-ipware = "^7.0.1"
marshmallow = "^3.22.0"
redis = "^5.1.0"
django-ratelimit = "^4.1.0"
django-cors-headers = "^4.4.0"
django-anymail = {extras = ["mailgun"], version = "^12.0"}
gunicorn = "^23.0.0"
argon2-cffi = "^23.1.0"
sentry-sdk = {extras = ["django"], version = "^2.22.0"}
huey = "^2.5.2"
backoff = "^2.2.1"


[tool.poetry.group.dev.dependencies]
black = "^24.8.0"
mypy = "^1.11.1"
isort = "^5.13.2"
flake8 = "^7.1.1"
django-stubs = {extras = ["compatible-mypy"], version = "^5.2.2"}
ipdb = "^0.13.13"
pytest-django = "^4.8.0"
factory-boy = "^3.3.1"
freezegun = "^1.5.1"
pytest-mock = "^3.14.0"
tox = "^4.28.4"
psycopg2-binary = "^2.9.10"
ruff = "^0.12.12"
types-requests = "^2.32.4.20250809"
types-factory-boy = "^0.4.1"
bandit = {extras = ["toml"], version = "^1.8.6"}

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "migrations",
    "tests",
    "manage.py"
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "A002",     # TODO: remove this later.
    "ANN003",
    "ANN201",
    "ARG002",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D203",
    "D213",
    "E203",
    "EM101",
    "FIX002",
    "PTH",
    "TD003",
    "S108",     # TODO: remove this later.
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.pylint]
max-args = 10

[tool.bandit]
exclude_dirs = ["**/tests/*"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
